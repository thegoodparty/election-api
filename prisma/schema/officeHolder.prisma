model OfficeHolder {
  id                   String     @id @db.Uuid
  brHashId             String?    @map("br_hash_id")
  brDatabaseId         Int?       @map("br_database_id")
  createdAt            DateTime   @map("created_at")
  updatedAt            DateTime   @map("updated_at")

  isAppointed          Boolean    @map("is_appointed")
  isCurrent            Boolean    @map("is_current")
  isOffCycle           Boolean    @map("is_off_cycle")
  isVacant             Boolean    @map("is_vacant")
  officeTitle          String?    @map("office_title")
  endAt                DateTime?  @map("end_at")
  startAt              DateTime?  @map("start_at")
  totalYearsInOffice   Int        @map("total_years_in_office")

  // Position relationship
  positionId           String     @map("position_id") @db.Uuid
  position             Position   @relation(fields: [positionId], references: [id])

  // Person relationship (can be null if vacant)
  personId             String?    @map("person_id") @db.Uuid
  person               Person?    @relation(fields: [personId], references: [id])

  // Many-to-many with party through officeHolderParty join table
  officeHolderParties  OfficeHolderParty[]

  // Polymorphic contact reference
  contacts             Contact[]
  
  @@map("office_holder")
} 