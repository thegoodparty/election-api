model Place {
    id           String   @id @map("id") @db.Uuid
    createdAt    DateTime @default(now()) @map("created_at")
    updatedAt    DateTime @updatedAt @map("updated_at")
    brPositionId Int      @map("br_position_id")
    name         String   @map("name")
    slug         String   @map("slug") // This is each component of the geoId joined by hyphens city-county-state or district-state , where state is 2 chars
    geoId        String   @map("geoid")
    mtfcc        String?  @map("mtfcc")
    state        String   @db.Char(2)

    // Fun Facts
    cityLargest           String? @map("city_largest")
    countyName            String? @map("county_name")
    popluation            Int?    @map("popluation")
    density               Float?  @map("density")
    incomeHouseholdMedian Int?    @map("income_household_median")
    unemploymentRate      Float?  @map("unemployment_rate")
    homeValue             Int?    @map("home_value")

    // Relations
    Races    Race[]
    // Recursive relationships
    children Place[] @relation("PlaceHierarchy")
    parent   Place?  @relation("PlaceHierarchy", fields: [parentId], references: [id])
    parentId String? @db.Uuid
}
