enum ElectionResult {
  WON
  LOST
  RUNOFF

  @@map("election_result")
}

model Candidacy {
  id   String @id @default(cuid())
  slug String @unique

  // Candidacy
  firstName String
  lastName  String
  party     String // Use index 0 of parties array

  // Race for state, and potentially longest geoid Place on Race?
  city  String?
  state String?

  // Person
  image String? // Use index 0 of images array
  about String? // From bioText on Person
  urls  String[] // Assume this is an array of strings

  // GP-API (P2V)
  projectedTurnout      Int?
  republicans           Int?
  democrats             Int?
  independents          Int?
  totalRegisteredVoters Int?

  // GP-API (top issues and campaignPosition if a user, if not present, then use stances.issue and stances.statement from BR)
  topIssues Json? // Array of objects with { issue, statement }

  // GP-API Campaign
  email              String?
  pastExperience     String? // Formerly jobHistory
  previouslyInOffice Boolean?
  priorRoles         String? // Can be comma-separated string if array

  // Position (from Candidacy -> Position)
  electionFrequency      String? // Formerly called term
  salary                 Int?
  normalizedPositionName String?
  positionDescription    String?

  // Unknown source
  education       String?
  militaryService String?
}
