enum electionResult {
  WON
  LOST
  RUNOFF
  
  @@map("election_result")
}

/** 
 * CANDIDACY 
 * (Implements DatabaseIdentifiable, Node, Timestamps)
 * belongs to person (candidate), election, race, position
 * many-to-many with party, has many stances
 */
model candidacy {
  id           Int            @id @default(autoincrement())
  databaseId   Int?           @map("database_id")
  createdAt    DateTime       @map("created_at")
  updatedAt    DateTime       @map("updated_at")

  isCertified  Boolean        @map("is_certified")
  isHidden     Boolean        @map("is_hidden")
  withdrawn    Boolean
  // Election result is an enum; can be null if no result yet
  result       electionResult?

  // Person
  candidateId  Int            @map("candidate_id")
  candidate    person         @relation(fields: [candidateId], references: [id])

  // Election
  electionId   Int            @map("election_id")
  election     election       @relation(fields: [electionId], references: [id])

  // Race
  raceId       Int            @map("race_id")
  race         race           @relation(fields: [raceId], references: [id])

  // Position
  positionId   Int            @map("position_id")
  position     position       @relation(fields: [positionId], references: [id])

  // Many-to-many with party through candidacyParty join table
  candidacyParties candidacyParty[]

  // One candidacy -> many stances
  stances      stance[]
  
  // One candidacy -> many endorsements
  endorsements endorsement[]
  
  @@map("candidacy")
} 